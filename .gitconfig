# vim: st=2:ts=2:et
[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = black bold
  frag = magenta bold
  old = red bold
  new = yellow bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan


[core]
  excludesfile = ~/.gitignore-global
[alias]
  a     = add
  ae     = add --edit
  ai    = add --interactive
  ap    = add --patch
  au    = add --update
  b     = branch
  bls   = branch -v # list branches with last commit in
  brm   = branch -d # remove if branch-to-be-removed if fully merged into HEAD
  brm-f = branch -D # force removal
  bmv   = branch -m
  cg    = config --global
  ceg   = config --global --edit
  clg   = config --global --list
  c     = config 
  cl    = config --list
  ce    = config --edit
  co    = checkout
  cob   = checkout -b
  com   = "!f() { git fetch; git checkout -b master origin/master; }; f"
  cot   = "!f() { git fetch; git checkout -b ${1##*/} $1; }; f " 
  #coe   = "!f() { git symbolic-ref HEAD refs/heads/${1:-empty}; rm .git/index; git clean -fdx; git commit --allow-empty -m 'empty, clean branch'; }; f"
  ca    = "!f() { git add $1; git ci -v $1; }; f"
  ci    = commit -v --untracked-files=no
  cia   = commit -v -a --untracked-files=no
  ciab  = !B=$(git symbolic-ref HEAD 2>/dev/null) && git commit -v -a --edit -m "${B##refs/heads/}:" --untracked-files=no
  cii   = commit --interactive
  cid   = commit --amend
  cim   = commit -m
  cip   = commit -am '[...in progress...]' 
  cir   = reset HEAD^
  chp   = cherry-pick 
  d     = diff
  do    = diff ORIG_HEAD..
  ds    = diff --stat=120,130 -M -C 
  dy    = diff --summary -M -C
  em    = "!${EDITOR:-vim} $(git ls-files --modified)"
  eo    = "!${EDITOR:-vim} $(git ls-files --other)"
  k     = "!gitk &"
  l     = log --date=local
  ls    = log --stat=120,130 --date=local
  lp    = log --patch --date=local
  lpw   = log --patch --word-diff --date=local
  lll   = "log --date=local --pretty=format:'%C(yellow) %h %Cblue %cd %C(green) %cn %C(black) %s'"
  ll    = log --pretty=oneline --date=local --abbrev-commit 
  lg    = log --pretty=oneline --date=local --abbrev-commit --graph --decorate
  lu    = log ORIG_HEAD.. --stat --no-merges --date=local
  po    = push origin HEAD
  poh   = push origin HEAD
  pu    = pull
  pr    = pull --rebase
  up    = pull --rebase
  r     = rebase
  ra    = rebase --abort
  rc    = rebase --continue
  ri    = rebase --interactive
  rih   = "!f() { git rebase -i HEAD$1; }; f "
  rst   = reset
  st    = status --short --branch --untracked-files=no 
  sta   = status --short --branch --untracked-files=normal 
  sv    = svn
  svci  = svn dcommit --no-rebase
  svr   = svn rebase
  sy     = !git pull && git push
  ta    = tag -a
#  ticket = "!f() { git checkout -b `echo $1|tr 'A-Z' 'a-z'` origin/master }; f "
[user]
  name  = gmarik
  email = gmarik@gmail.com
[push]
  default = tracking
[commit]
	template = ~/.gitfiles/commit-template
