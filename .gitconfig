# vim: st=2:ts=2:et
[core]
  excludesfile = ~/.gitignore-global
[user]
  name  = gmarik
  email = gmarik@gmail.com
[push]
  default = current
[init]
  templatedir = ~/.gitfiles/templates/
[commit]
  template = ~/.gitfiles/COMMIT_EDITMSG
[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = black bold
  frag = magenta bold
  old = red bold
  new = yellow bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
; [apply]
;   whitespace = fix
[mergetool "mvimdiff"]
  cmd="/Applications/MacVim.app/Contents/MacOS/Vim -d -g -c 'wincmd J'  $MERGED $LOCAL $BASE $REMOTE"
  keepbackup=false

[alias]
  a     = add
  ae    = add --edit
  ai    = add --interactive
  ap    = add --patch
  au    = add --update
  b     = branch
  bls   = branch -v # list branches with last commit in
  brm   = branch -d # remove if branch-to-be-removed if fully merged into HEAD
  brmf  = branch -D # force removal
  bmv   = branch -m
  cg    = config --global
  ceg   = config --global --edit
  clg   = config --global --list
  c     = config 
  cl    = config --list
  ce    = config --edit
  co    = checkout
  cob   = checkout -b
  com   = "!f() { git fetch; git checkout -b master origin/master; }; f"
  cot   = "!f() { git fetch; git checkout -b ${1##*/} $1; }; f " 
  #coe   = "!f() { git symbolic-ref HEAD refs/heads/${1:-empty}; rm .git/index; git clean -fdx; git commit --allow-empty -m 'empty, clean branch'; }; f"
  ca    = "!f() { git add $1; git ci -v $1; }; f"
  ci    = commit -v --untracked-files=no
  cia   = commit -v -a --untracked-files=no
  ciab  = !B=$(git symbolic-ref HEAD 2>/dev/null) && git commit -v -a --edit -m "${B##refs/heads/}:" --untracked-files=no
  cii   = commit --interactive
  cid   = commit --amend
  cim   = commit -m
  cip   = commit -am '[...in progress...]' 
  cir   = reset HEAD^
  chp   = cherry-pick 
  d     = diff
  dc    = diff --cached
  do    = diff ORIG_HEAD..
  ds    = diff --stat=120,130 -M -C 
  dy    = diff --summary -M -C
  em    = "!${EDITOR:-vim} $(git ls-files --modified)"
  ea    = "!${EDITOR:-vim} $(git status --short --porcelain|cut -f2 -d' ')"
  k     = "!gitk &"
  l     = log --date=relative
  ls    = log --stat=120,130 --date=relative
  lp    = log --patch --date=relative
  lpw   = log --patch --word-diff --date=relative
  ll    = log  --abbrev-commit --date=relative --pretty=format:'%C(yellow)%h%Creset %s %Cgreen(%cr) %C(bold blue) %an %Creset%C(red)%d'
  lg    = !git ll --graph 
  lu    = log ORIG_HEAD.. --stat --no-merges --date=relative
  po    = push origin HEAD
  poh   = push origin HEAD
  pu    = pull
  pr    = pull --rebase
  up    = pull --rebase
  r     = rebase
  ra    = rebase --abort
  rc    = rebase --continue
  ri    = rebase --interactive
  rih   = "!f() { git rebase -i HEAD$1; }; f "
  rst   = reset
  st    = status --short --branch --untracked-files=no 
  sta   = status --short --branch --untracked-files=normal 
  sv    = svn
  svci  = svn dcommit --no-rebase
  svr   = svn rebase
  sy     = !git pull && git push
  ta    = tag -a
  mt    = "! [ -f /Applications/MacVim.app/Contents/MacOS/Vim ] && git mergetool -t mvimdiff || git mergetool -t vimdiff"

#  ticket = "!f() { git checkout -b `echo $1|tr 'A-Z' 'a-z'` origin/master }; f "


# http://bit.ly/g9c9Y2
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"
[url "git@heroku.com:"]
  insteadOf = "heroku:"
